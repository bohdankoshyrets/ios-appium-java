# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Appium 2 and xcuitest driver
      run: |
        npm i -g appium@latest
        appium -v
        appium driver install xcuitest
        appium driver list --installed

    - name: Xcode Info
      run: |
        xcodebuild -version
        xcrun simctl list runtimes
        xcrun simctl list devicetypes

    - name: Create and boot iOS Simulator
      shell: bash
      id: simulator
      run: |
        DEVICETYPE="com.apple.CoreSimulator.SimDeviceType.iPhone-16"
        RUNTIME="com.apple.CoreSimulator.SimRuntime.iOS-18-6"
        UDID=$(xcrun simctl create "CI-iPhone" "$DEVICETYPE" "$RUNTIME")
        echo "UDID=$UDID" >> $GITHUB_OUTPUT
        
        xcrun simctl boot "$UDID"
        xcrun simctl bootstatus "$UDID" -b
        xcrun simctl list devices | grep "$UDID"

    - name: Launch Appium server
      run: |
        nohup appium --log appium.log > appium.out 2>&1 &
        for i in {1..30}; do
          nc -z localhost 4723 && echo "Appium is up" && break
          sleep 1
        done

    - name: Run tests
      env: 
        # DEVICETYPE: ${{ steps.simulator.outputs.DEVICETYPE }}
        # RUNTIME: ${{ steps.simulator.outputs.RUNTIME }}
        UDID: ${{ steps.simulator.outputs.UDID }}
      run: |
        echo $UDID
        xcrun simctl list devices | grep "$UDID"
        mvn -q clean test -Dappium.device.udid="$UDID"

    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: surefire-reports
        path: |
          appium.log
          appium.out

        
    

    
